from aws_cdk import aws_dms as _dms
from aws_cdk import aws_ec2 as _ec2
from aws_cdk import core

class GlobalArgs():
    """
    Helper to define global statics
    """

    OWNER = "SamirKakli"
    ENVIRONMENT = "development"
    REPO_NAME = "redshift-demo"
    SOURCE_INFO = f"https://github.com/kaklis/{REPO_NAME}"
    VERSION = "2021_03_15"
    SUPPORT_EMAIL = ["kaklis@amazon.com", ]

class DmsStack(core.Stack):

    def __init__(
        self,
        scope: core.Construct, id: str,
        vpc,
        cluster,
        source_engine,
        source_db,
        source_host,
        source_user,
        source_pwd,
        source_port,
        stack_log_level: str,
        **kwargs

    ) -> None:
        super().__init__(scope, id, **kwargs)

        dms_endpoint_tgt = _dms.CfnEndpoint(
            self,
            "DMSendpointtgt",
            endpoint_type="target",
            engine_name="redshift",
#            server_name="redshift-demo-stack-redshiftdemocluster-1uuge4blr8tzh.cjw6o7pzp9rn.us-east-1.redshift.amazonaws.com",
            database_name=f"{cluster.get_cluster_dbname}",
            password=f"{cluster.get_cluster_password}",
            username=f"{cluster.get_cluster_user}",
            server_name=f"{cluster.get_cluster_host}",
            port=5439
         )

        dms_endpoint_src = _dms.CfnEndpoint(
            self,
            "DMSendpointsrc",
            endpoint_type="source",
            engine_name=source_engine,
            database_name=source_db,
            password=source_pwd,
            port=source_port,
            username=source_user,
            server_name=source_host,
         )

        dmssubnetgrp = _dms.CfnReplicationSubnetGroup(
            self,
            "DMSsubnetgroup",
            replication_subnet_group_description="Subnet group for DMS replication instance",
            subnet_ids=vpc.get_vpc_public_subnet_ids
         )

        self.dms = _dms.CfnReplicationInstance(
            self,
            "SQLservertoRedshift",
            replication_instance_class="dms.t3.medium",
            allocated_storage=50,
            allow_major_version_upgrade=None,
            auto_minor_version_upgrade=None,
            multi_az=False,
            publicly_accessible=True,
            replication_subnet_group_identifier=dmssubnetgrp.ref
        )

